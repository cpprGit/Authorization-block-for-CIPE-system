version: '2.1'

networks:
  cppr:
    driver: bridge

services:
  database:
    networks:
      - cppr
    restart: on-failure
    container_name: ${POSTGRES_CONTAINER}
    hostname: ${POSTGRES_HOST}
    build:
      context: .
      dockerfile: ./database/Dockerfile
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE_NAME}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:${POSTGRES_PORT}
    volumes:
      - ./volumes/etc/postgresql:/etc/postgresql
      - ./volumes/log/postgresql:/var/log/postgresql
      - ./volumes/lib/postgresql:/var/lib/postgresql
    healthcheck:
      test: [ "CMD-SHELL", pg_isready -U $POSTGRES_USER -d $POSTGRES_DATABASE_NAME ]
      interval: 10s
      timeout: 5s
      retries: 10

  pgadmin:
    networks:
      - cppr
    restart: on-failure
    container_name: ${PGADMIN_CONTAINER}
    hostname: ${PGADMIN_HOST}
    image: dpage/pgadmin4:latest
    env_file: .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_PORT}
    ports:
      - 5454:${PGADMIN_PORT}
    depends_on:
      - database

  grafana:
    networks:
      - cppr
    entrypoint: [ "echo", "Service grafana disabled" ]
    restart: on-failure
    container_name: ${GRAFANA_CONTAINER}
    hostname: ${GRAFANA_HOST}
    image: grafana/grafana:latest
    env_file: .env
    environment:
      GF_DATABASE_HOST: "${POSTGRES_HOST}:${POSTGRES_PORT}"
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_NAME: ${GRAFANA_DATABASE_NAME}
      GF_DATABASE_SSL_MODE: disable
      GF_DATABASE_USER: ${GRAFANA_DATABASE_USER}
      GF_DATABASE_PASSWORD: ${GRAFANA_DATABASE_PASSWORD}
      GF_SECURITY_ADMIN_USER: ${GRAFANA_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_SECURITY_ADMIN_PASSWORD}
      GF_SERVER_DOMAIN: ${GRAFANA_SERVER_DOMAIN}
      GF_SERVER_ROOT_URL: "https://${GRAFANA_SERVER_DOMAIN}/"
      GF_USERS_ALLOW_ORG_CREATE: 'false'
      GF_USERS_ALLOW_SIGN_UP: 'false'
      GF_USERS_AUTO_ASSIGN_ORG: 'true'
      GF_USERS_AUTO_ASSIGN_ORG_ROLE: Editor
    ports:
      - 3000:${GRAFANA_PORT}
    links:
      - database

  smtpadmin:
    entrypoint: [ "echo", "Service smtpadmin disabled" ]
    networks:
      - cppr
    restart: always
    container_name: ${SMTPADMIN_CONTAINER_NAME}
    hostname: ${SMTPADMIN_HOSTNAME}
    image: postfixadmin:latest
    env_file: .env
    environment:
      APACHE_RUN_DIR: ${SMTPADMIN_APACHE_RUN_DIR}
      POSTFIXADMIN_DB_TYPE: pgsql
      POSTFIXADMIN_DB_HOST: ${POSTGRES_HOST}
      POSTFIXADMIN_DB_PORT: ${POSTGRES_PORT}
      POSTFIXADMIN_DB_NAME: ${SMTPADMIN_DATABASE_NAME}
      POSTFIXADMIN_DB_USER: ${SMTPADMIN_DATABASE_USER}
      POSTFIXADMIN_DB_PASSWORD: ${SMTPADMIN_DATABASE_PASSWORD}
    ports:
      - 8079:${SMTPADMIN_PORT}
    volumes:
      - ./smtpadmin/config.local.php:/var/www/html/config.local.php
    depends_on:
      - database

#  smtp:
#    networks:
#      - cppr
#    entrypoint: [ "echo", "Service smtp disabled" ]
#    restart: on-failure
#    container_name: ${SMTP_CONTAINER_NAME}
#    hostname: ${SMTP_HOSTNAME}
#    build:
#      context: .
#      dockerfile: ./smtp/Dockerfile
#    env_file: .env
#    ports:
#      - 25:25   # SMTP
#      - 143:143 # IMAP
#      - 993:993 # IMAPS
#      - 110:110 # POP3
#      - 995:995 # POP3S
#    volumes:
#      # Postfix configuration
#      - ./smtp/postfix/main.cf:/etc/postfix/main.cf:ro
#      # - ./smtp/postfix/master.cf:/etc/postfix/master.cf:ro
#      - ./smtp/postfix/certs:/etc/postfix/certs:ro
#      - ./smtp/postfix/pgsql/gids.cf:/etc/postfix/gids.cf:ro
#      - ./smtp/postfix/pgsql/uids.cf:/etc/postfix/uids.cf:ro
#      - ./smtp/postfix/pgsql/mailboxes.cf:/etc/postfix/mailboxes.cf:ro
#      - ./smtp/postfix/pgsql/transport.cf:/etc/postfix/transport.cf:ro
#      - ./smtp/postfix/pgsql/virtual.cf:/etc/postfix/virtual.cf:ro
#      # SASL configuration
#      - ./smtp/postfix/sasl/default/saslauthd:/etc/default/saslauthd:ro
#      - ./smtp/postfix/sasl/pam_pgsql.cnf:/etc/pam_pgsql.cnf:ro
#      - ./smtp/postfix/sasl/smtpd.conf:/etc/postfix/sasl/smtpd.conf:ro
#      - ./smtp/postfix/sasl/pam.d/smtp:/etc/pam.d/smtp
#      # Dovecot configuration
#      - ./smtp/dovecot/dovecot.conf:/etc/dovecot/dovecot.conf:ro
#      - ./smtp/dovecot/dovecot-sql.conf:/etc/dovecot/dovecot-sql.conf:ro
#    depends_on:
#      - smtpadmin

  backend:
    networks:
      - cppr
    entrypoint: [ "echo", "Service backend disabled" ]
    restart: on-failure
    container_name: ${BACKEND_CONTAINER}
    hostname: ${BACKEND_HOST}
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE_NAME}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      BACKEND_HOST: ${BACKEND_HOST}
      BACKEND_PORT: ${BACKEND_PORT}
    ports:
      - 8081:${BACKEND_PORT}
    volumes:
      - ./volumes/etc/backend:/etc/backend
      - ./volumes/log/backend:/var/log/backend
    depends_on:
      - grafana
      - pgadmin
#      - smtp
